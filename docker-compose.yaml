services:
  # Récupère la dernière image d'alloy
  alloy:
    image: grafana/alloy:latest
    # Permet de paramétrer le nom du docker
    container_name: Alloy
    # Redirection de port de la machine réelle au port du docker
    ports:
      - 12345:12345
    # Créer les volumes dans le docker, récupérer le fichier dans la machine hôte vers le docker
    volumes:
      - ./alloy-config.alloy:/etc/alloy/config.alloy
      - ./logs:/tmp/app-logs/
    # Exécute la commande au lancement d'alloy, afin d'écouter sur le port concerné depuis l'adresse renseignée
    # donc toute IP car il est renseigné 0.0.0.0, précise également l'endroit où les logs vont être enregistrés
    # et le fichier de configuration au moment du lancement.
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    # Fait en sorte qu'alloy dépend de Loki au démarrage, Loki doit obligatoirement être lancé pour qu'alloy se lance
    depends_on:
      - loki

  loki:
    # Récupère la dernière image de Loki
    image: grafana/loki:main
    # Permet de paramétrer le nom du docker
    container_name: Loki
    # Redirection de port de la machine réelle au port du docker
    ports:
      - 3100:3100
    # Créer les volumes dans le docker, récupérer le fichier dans la machine hôte vers le docker
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    # Exécute la commande au lancement de Loki, afin d'appliquer la configuration renseignée
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    # Récupère la dernière image de Grafana
    image: grafana/grafana:latest
    # Permet de paramétrer le nom du docker
    container_name: Grafana
    environment:
      # Ces deux premières lignes permettent l'authentification anonyme et que le rôle admin soit donné à l'anonyme
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      # Désactive l'authentification login/password
      - GF_AUTH_BASIC_ENABLED=true
      # Mode expérimental
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall
      # Installe des plugins au démarrage de Grafana, ici le plugin pour une meilleure exploration des logs dans Loki
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
    # Redirection de port de la machine réelle au port du docker, ici en précisant que le protocole TCP est utilisé
    ports:
      - 3000:3000/tcp
    # Créer les volumes dans le docker, récupérer le fichier dans la machine hôte vers le docker
    volumes:
      - ./grafana:/etc/grafana/provisioning
    depends_on:
      - loki
      - alloy
  nginx:
    image: nginx:latest
    container_name: Nginx
    ports: 
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/log:/var/log/nginx
    depends_on:
      - alloy
